INFO:pycommerce.services.mail:Email template directory: /home/runner/workspace/templates/emails
ERROR:pycommerce.plugins.payment.config:Error querying database for settings: When initializing mapper Mapper[InventoryRecord(inventory_records)], expression 'pycommerce.models.db_inventory.InventoryTransaction' failed to locate a name ("Module 'models' has no mapped classes registered under the name 'db_inventory'"). If this is a class name, consider adding this relationship() to the <class 'pycommerce.models.db_registry.InventoryRecord'> class after both dependent classes have been defined.
INFO:pycommerce.plugins.payment.config:Using development Stripe credentials
INFO:pycommerce.plugins.payment.config:Using development PayPal credentials
INFO:pycommerce.plugins.payment.stripe:Initializing Stripe payment plugin
INFO:pycommerce.plugins:Registering plugin: stripe_payment v0.1.0
INFO:pycommerce.plugins.payment.stripe:Initializing Stripe payment plugin
INFO:pycommerce:Registered payment plugin: stripe
INFO:pycommerce.plugins.payment.paypal:Initializing PayPal payment plugin
INFO:pycommerce.plugins:Registering plugin: paypal_payment v0.1.0
INFO:pycommerce.plugins.payment.paypal:Initializing PayPal payment plugin
INFO:pycommerce:Registered payment plugin: paypal
INFO:pycommerce.plugins:Registering plugin: standard_shipping v0.1.0
INFO:pycommerce.plugins.shipping.standard:Initializing Standard shipping plugin
INFO:pycommerce:Registered shipping plugin: standard
INFO:pycommerce.models.category:Found Flask app in module app
INFO:pycommerce.models.category:CategoryManager initialized
ERROR:pycommerce.models.plugin_config:Error retrieving configuration for plugin ai: One or more mappers failed to initialize - can't proceed with initialization of other mappers. Triggering mapper: 'Mapper[InventoryRecord(inventory_records)]'. Original exception was: When initializing mapper Mapper[InventoryRecord(inventory_records)], expression 'pycommerce.models.db_inventory.InventoryTransaction' failed to locate a name ("Module 'models' has no mapped classes registered under the name 'db_inventory'"). If this is a class name, consider adding this relationship() to the <class 'pycommerce.models.db_registry.InventoryRecord'> class after both dependent classes have been defined.
ERROR:pycommerce.plugins.ai.config:Error loading AI configuration: Failed to retrieve plugin configuration: One or more mappers failed to initialize - can't proceed with initialization of other mappers. Triggering mapper: 'Mapper[InventoryRecord(inventory_records)]'. Original exception was: When initializing mapper Mapper[InventoryRecord(inventory_records)], expression 'pycommerce.models.db_inventory.InventoryTransaction' failed to locate a name ("Module 'models' has no mapped classes registered under the name 'db_inventory'"). If this is a class name, consider adding this relationship() to the <class 'pycommerce.models.db_registry.InventoryRecord'> class after both dependent classes have been defined.
WARNING:root:AI configuration module not available
INFO:pycommerce.core.db:Initializing database...
INFO:pycommerce.core.db:Database initialized successfully.
INFO:pycommerce.core.db:Initializing database...
INFO:pycommerce.core.db:Database initialized successfully.
INFO:pycommerce.migrations:Database migrations initialized
INFO:pycommerce.models.category:CategoryManager initialized
INFO:pycommerce.services.market_analysis:Flask ProductManager initialized for fallback product lookups
INFO:pycommerce.services.market_analysis:Market analysis service initialized
INFO:routes.admin.categories:Initializing managers for categories routes
INFO:pycommerce.models.category:CategoryManager initialized
INFO:routes.admin.categories:Successfully initialized CategoryManager for admin categories routes
INFO:routes.admin.categories:Manager initialization complete
INFO:routes.storefront.home:Home routes registered successfully
INFO:routes.storefront.stores:Initialized SDK TenantManager
INFO:routes.storefront.stores:Initialized SDK ProductManager
INFO:routes.storefront.stores:Initialized SDK CartManager
INFO:routes.storefront.stores:Finished loading managers
INFO:routes.storefront.cart:Initialized SDK ProductManager
INFO:routes.storefront.cart:Initialized SDK CartManager
INFO:routes.storefront.cart:Initialized SDK TenantManager
INFO:routes.storefront.cart:Finished loading managers
INFO:routes.storefront.checkout:Initialized SDK TenantManager
INFO:routes.storefront.checkout:Initialized SDK ProductManager
INFO:routes.storefront.checkout:Initialized SDK CartManager
INFO:routes.storefront.checkout:Initialized SDK OrderManager
INFO:routes.storefront.checkout:Finished loading Flask app managers
Traceback (most recent call last):
  File "/home/runner/workspace/main.py", line 12, in <module>
    from asgi_wsgi_app import proxy_to_uvicorn, start_uvicorn_server
  File "/home/runner/workspace/asgi_wsgi_app.py", line 8, in <module>
    from web_app import app as asgi_app
  File "/home/runner/workspace/web_app.py", line 46, in <module>
    from routes.admin.page_builder import setup_routes as setup_page_builder_routes
  File "/home/runner/workspace/routes/admin/page_builder.py", line 14, in <module>
    from pycommerce.models.page_builder import PageManager, PageSectionManager, ContentBlockManager, PageTemplateManager, Page, PageTemplate
  File "/home/runner/workspace/pycommerce/models/page_builder.py", line 110, in <module>
    Tenant.pages = relationship("Page", back_populates="tenant", cascade="all, delete-orphan")
    ^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/sqlalchemy/orm/decl_api.py", line 132, in __setattr__
    _add_attribute(cls, key, value)
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/sqlalchemy/orm/decl_base.py", line 2125, in _add_attribute
    mapped_cls.__mapper__.add_property(key, value)
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/sqlalchemy/orm/mapper.py", line 2445, in add_property
    prop = self._configure_property(
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/sqlalchemy/orm/mapper.py", line 2251, in _configure_property
    prop.init()
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/sqlalchemy/orm/interfaces.py", line 589, in init
    self.do_init()
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/sqlalchemy/orm/relationships.py", line 1663, in do_init
    super().do_init()
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/sqlalchemy/orm/interfaces.py", line 1106, in do_init
    self.strategy = self._get_strategy(self.strategy_key)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/sqlalchemy/orm/interfaces.py", line 1054, in _get_strategy
    cls = self._strategy_lookup(self, *key)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/sqlalchemy/orm/interfaces.py", line 1137, in _strategy_lookup
    requesting_property.parent._with_polymorphic_mappers
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py", line 1257, in __get__
    obj.__dict__[self.__name__] = result = self.fget(obj)
                                           ^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/sqlalchemy/orm/mapper.py", line 2707, in _with_polymorphic_mappers
    self._check_configure()
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/sqlalchemy/orm/mapper.py", line 2401, in _check_configure
    _configure_registries({self.registry}, cascade=True)
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/sqlalchemy/orm/mapper.py", line 4214, in _configure_registries
    _do_configure_registries(registries, cascade)
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/sqlalchemy/orm/mapper.py", line 4251, in _do_configure_registries
    raise e
sqlalchemy.exc.InvalidRequestError: One or more mappers failed to initialize - can't proceed with initialization of other mappers. Triggering mapper: 'Mapper[InventoryRecord(inventory_records)]'. Original exception was: When initializing mapper Mapper[InventoryRecord(inventory_records)], expression 'pycommerce.models.db_inventory.InventoryTransaction' failed to locate a name ("Module 'models' has no mapped classes registered under the name 'db_inventory'"). If this is a class name, consider adding this relationship() to the <class 'pycommerce.models.db_registry.InventoryRecord'> class after both dependent classes have been defined.