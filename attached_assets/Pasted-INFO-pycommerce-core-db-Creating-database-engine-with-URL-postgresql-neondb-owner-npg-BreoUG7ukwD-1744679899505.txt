INFO:pycommerce.core.db:Creating database engine with URL: postgresql://neondb_owner:npg_BreoUG7ukwD2@ep-red-hall-a51hczs5.us-east-2.aws.neon.tech/neondb?sslmode=require
INFO:pycommerce.core.db:Database engine created successfully
INFO:pycommerce.services.mail:Email template directory: /home/runner/workspace/templates/emails
ERROR:pycommerce.plugins.payment.config:Error querying database for settings: When initializing mapper Mapper[InventoryRecord(inventory_records)], expression 'pycommerce.models.db_inventory.InventoryTransaction' failed to locate a name ("Module 'models' has no mapped classes registered under the name 'db_inventory'"). If this is a class name, consider adding this relationship() to the <class 'pycommerce.models.db_registry.InventoryRecord'> class after both dependent classes have been defined.
INFO:pycommerce.plugins.payment.config:Using development Stripe credentials
INFO:pycommerce.plugins.payment.config:Using development PayPal credentials
INFO:pycommerce.plugins.payment.stripe:Initializing Stripe payment plugin
INFO:pycommerce.plugins:Registering plugin: stripe_payment v0.1.0
INFO:pycommerce.plugins.payment.stripe:Initializing Stripe payment plugin
INFO:pycommerce:Registered payment plugin: stripe
INFO:pycommerce.plugins.payment.paypal:Initializing PayPal payment plugin
INFO:pycommerce.plugins:Registering plugin: paypal_payment v0.1.0
INFO:pycommerce.plugins.payment.paypal:Initializing PayPal payment plugin
INFO:pycommerce:Registered payment plugin: paypal
INFO:pycommerce.plugins:Registering plugin: standard_shipping v0.1.0
INFO:pycommerce.plugins.shipping.standard:Initializing Standard shipping plugin
INFO:pycommerce:Registered shipping plugin: standard
INFO:pycommerce.models.category:Found Flask app in module app
INFO:pycommerce.models.category:CategoryManager initialized
ERROR:pycommerce.models.plugin_config:Error retrieving configuration for plugin ai: One or more mappers failed to initialize - can't proceed with initialization of other mappers. Triggering mapper: 'Mapper[InventoryRecord(inventory_records)]'. Original exception was: When initializing mapper Mapper[InventoryRecord(inventory_records)], expression 'pycommerce.models.db_inventory.InventoryTransaction' failed to locate a name ("Module 'models' has no mapped classes registered under the name 'db_inventory'"). If this is a class name, consider adding this relationship() to the <class 'pycommerce.models.db_registry.InventoryRecord'> class after both dependent classes have been defined.
ERROR:pycommerce.plugins.ai.config:Error loading AI configuration: Failed to retrieve plugin configuration: One or more mappers failed to initialize - can't proceed with initialization of other mappers. Triggering mapper: 'Mapper[InventoryRecord(inventory_records)]'. Original exception was: When initializing mapper Mapper[InventoryRecord(inventory_records)], expression 'pycommerce.models.db_inventory.InventoryTransaction' failed to locate a name ("Module 'models' has no mapped classes registered under the name 'db_inventory'"). If this is a class name, consider adding this relationship() to the <class 'pycommerce.models.db_registry.InventoryRecord'> class after both dependent classes have been defined.
WARNING:root:AI configuration module not available
INFO:pycommerce.core.db:Initializing database with URL: postgresql://neondb_owner:npg_BreoUG7ukwD2@ep-red-hall-a51hczs5.us-east-2.aws.neon.tech/neondb?sslmode=require
INFO:pycommerce.core.db:Database tables created successfully
INFO:pycommerce.core.db:Initializing database with URL: postgresql://neondb_owner:npg_BreoUG7ukwD2@ep-red-hall-a51hczs5.us-east-2.aws.neon.tech/neondb?sslmode=require
INFO:pycommerce.core.db:Database tables created successfully
INFO:pycommerce.migrations:Database migrations initialized
INFO:pycommerce.models.category:CategoryManager initialized
INFO:pycommerce.services.market_analysis:Flask ProductManager initialized for fallback product lookups
INFO:pycommerce.services.market_analysis:Market analysis service initialized
INFO:routes.admin.categories:Initializing managers for categories routes
INFO:pycommerce.models.category:CategoryManager initialized
INFO:routes.admin.categories:Successfully initialized CategoryManager for admin categories routes
INFO:routes.admin.categories:Manager initialization complete
INFO:routes.storefront.home:Home routes registered successfully
INFO:routes.storefront.stores:Initialized SDK TenantManager
INFO:routes.storefront.stores:Initialized SDK ProductManager
INFO:routes.storefront.stores:Initialized SDK CartManager
INFO:routes.storefront.stores:Finished loading managers
INFO:routes.storefront.cart:Initialized SDK ProductManager
INFO:routes.storefront.cart:Initialized SDK CartManager
INFO:routes.storefront.cart:Initialized SDK TenantManager
INFO:routes.storefront.cart:Finished loading managers
INFO:routes.storefront.checkout:Initialized SDK TenantManager
INFO:routes.storefront.checkout:Initialized SDK ProductManager
INFO:routes.storefront.checkout:Initialized SDK CartManager
INFO:routes.storefront.checkout:Initialized SDK OrderManager
INFO:routes.storefront.checkout:Finished loading Flask app managers
INFO:routes.admin.page_builder:Setting up page builder routes with templates
INFO:routes.admin.page_builder:Templates setup complete
INFO:routes.admin.page_builder:Base directory: /home/runner/workspace
INFO:routes.admin.page_builder:Template directory: /home/runner/workspace/templates
INFO:routes.admin.page_builder:Template found: /home/runner/workspace/templates/admin/pages/list.html
INFO:routes.admin.page_builder:Template found: /home/runner/workspace/templates/admin/pages/create.html
INFO:routes.admin.page_builder:Template found: /home/runner/workspace/templates/admin/pages/editor.html
INFO:web_app:Page Builder routes initialized successfully with templates
INFO:web_app:Admin routes registered successfully
INFO:routes.storefront.home:Home routes registered successfully
INFO:routes.storefront.cart:Initialized SDK ProductManager
INFO:routes.storefront.cart:Initialized SDK CartManager
INFO:routes.storefront.cart:Initialized SDK TenantManager
INFO:routes.storefront.cart:Finished loading managers
INFO:routes.storefront.checkout:Initialized SDK TenantManager
INFO:routes.storefront.checkout:Initialized SDK ProductManager
INFO:routes.storefront.checkout:Initialized SDK CartManager
INFO:routes.storefront.checkout:Finished loading Flask app managers
INFO:routes.storefront.stores:Initialized SDK TenantManager
INFO:routes.storefront.stores:Initialized SDK ProductManager
INFO:routes.storefront.stores:Initialized SDK CartManager
INFO:routes.storefront.stores:Finished loading managers
INFO:web_app:Storefront routes registered successfully
INFO:web_app:Store settings test routes registered successfully
INFO:pycommerce.models.category:CategoryManager initialized
INFO:pycommerce.services.market_analysis:Flask ProductManager initialized for fallback product lookups
INFO:pycommerce.services.market_analysis:Market analysis service initialized
INFO:web_app:API routes registered successfully
INFO:asgi_wsgi_app:No existing uvicorn processes found
INFO:asgi_wsgi_app:Starting uvicorn server with command: /home/runner/workspace/.pythonlibs/bin/python -m uvicorn web_app:app --host 127.0.0.1 --port 8000 --reload --no-use-colors
INFO:asgi_wsgi_app:Waiting for uvicorn server to start...
INFO:asgi_wsgi_app:Waiting for uvicorn server (attempt 1/10)
INFO:asgi_wsgi_app:Uvicorn: INFO:     Will watch for changes in these directories: ['/home/runner/workspace']
INFO:asgi_wsgi_app:Uvicorn: INFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)
INFO:asgi_wsgi_app:Uvicorn: INFO:     Started reloader process [4431] using WatchFiles
INFO:asgi_wsgi_app:Waiting for uvicorn server (attempt 2/10)
INFO:asgi_wsgi_app:Uvicorn: INFO:pycommerce.core.db:Creating database engine with URL: postgresql://neondb_owner:npg_BreoUG7ukwD2@ep-red-hall-a51hczs5.us-east-2.aws.neon.tech/neondb?sslmode=require
INFO:asgi_wsgi_app:Uvicorn: INFO:pycommerce.core.db:Database engine created successfully
INFO:asgi_wsgi_app:Uvicorn: INFO:pycommerce.services.mail:Email template directory: /home/runner/workspace/templates/emails
INFO:asgi_wsgi_app:Uvicorn: ERROR:pycommerce.plugins.payment.config:Error querying database for settings: When initializing mapper Mapper[InventoryRecord(inventory_records)], expression 'pycommerce.models.db_inventory.InventoryTransaction' failed to locate a name ("Module 'models' has no mapped classes registered under the name 'db_inventory'"). If this is a class name, consider adding this relationship() to the <class 'pycommerce.models.db_registry.InventoryRecord'> class after both dependent classes have been defined.
INFO:asgi_wsgi_app:Uvicorn: INFO:pycommerce.plugins.payment.config:Using development Stripe credentials
INFO:asgi_wsgi_app:Uvicorn: INFO:pycommerce.plugins.payment.config:Using development PayPal credentials
INFO:asgi_wsgi_app:Uvicorn: INFO:pycommerce.plugins.payment.stripe:Initializing Stripe payment plugin
INFO:asgi_wsgi_app:Uvicorn: INFO:pycommerce.plugins:Registering plugin: stripe_payment v0.1.0
INFO:asgi_wsgi_app:Uvicorn: INFO:pycommerce.plugins.payment.stripe:Initializing Stripe payment plugin
INFO:asgi_wsgi_app:Uvicorn: INFO:pycommerce:Registered payment plugin: stripe
INFO:asgi_wsgi_app:Uvicorn: INFO:pycommerce.plugins.payment.paypal:Initializing PayPal payment plugin
INFO:asgi_wsgi_app:Uvicorn: INFO:pycommerce.plugins:Registering plugin: paypal_payment v0.1.0
INFO:asgi_wsgi_app:Uvicorn: INFO:pycommerce.plugins.payment.paypal:Initializing PayPal payment plugin
INFO:asgi_wsgi_app:Uvicorn: INFO:pycommerce:Registered payment plugin: paypal
INFO:asgi_wsgi_app:Uvicorn: INFO:pycommerce.plugins:Registering plugin: standard_shipping v0.1.0
INFO:asgi_wsgi_app:Uvicorn: INFO:pycommerce.plugins.shipping.standard:Initializing Standard shipping plugin
INFO:asgi_wsgi_app:Uvicorn: INFO:pycommerce:Registered shipping plugin: standard
INFO:asgi_wsgi_app:Waiting for uvicorn server (attempt 3/10)
INFO:asgi_wsgi_app:Waiting for uvicorn server (attempt 4/10)
INFO:asgi_wsgi_app:Uvicorn: INFO:pycommerce.models.category:Found Flask app in module app
INFO:asgi_wsgi_app:Uvicorn: INFO:pycommerce.models.category:CategoryManager initialized
INFO:asgi_wsgi_app:Uvicorn: ERROR:pycommerce.models.plugin_config:Error retrieving configuration for plugin ai: One or more mappers failed to initialize - can't proceed with initialization of other mappers. Triggering mapper: 'Mapper[InventoryRecord(inventory_records)]'. Original exception was: When initializing mapper Mapper[InventoryRecord(inventory_records)], expression 'pycommerce.models.db_inventory.InventoryTransaction' failed to locate a name ("Module 'models' has no mapped classes registered under the name 'db_inventory'"). If this is a class name, consider adding this relationship() to the <class 'pycommerce.models.db_registry.InventoryRecord'> class after both dependent classes have been defined.
INFO:asgi_wsgi_app:Uvicorn: ERROR:pycommerce.plugins.ai.config:Error loading AI configuration: Failed to retrieve plugin configuration: One or more mappers failed to initialize - can't proceed with initialization of other mappers. Triggering mapper: 'Mapper[InventoryRecord(inventory_records)]'. Original exception was: When initializing mapper Mapper[InventoryRecord(inventory_records)], expression 'pycommerce.models.db_inventory.InventoryTransaction' failed to locate a name ("Module 'models' has no mapped classes registered under the name 'db_inventory'"). If this is a class name, consider adding this relationship() to the <class 'pycommerce.models.db_registry.InventoryRecord'> class after both dependent classes have been defined.
INFO:asgi_wsgi_app:Uvicorn: WARNING:root:AI configuration module not available
INFO:asgi_wsgi_app:Waiting for uvicorn server (attempt 5/10)
INFO:asgi_wsgi_app:Waiting for uvicorn server (attempt 6/10)
INFO:asgi_wsgi_app:Waiting for uvicorn server (attempt 7/10)
INFO:asgi_wsgi_app:Uvicorn: INFO:pycommerce.core.db:Initializing database with URL: postgresql://neondb_owner:npg_BreoUG7ukwD2@ep-red-hall-a51hczs5.us-east-2.aws.neon.tech/neondb?sslmode=require
INFO:asgi_wsgi_app:Waiting for uvicorn server (attempt 8/10)
INFO:asgi_wsgi_app:Uvicorn: INFO:pycommerce.core.db:Database tables created successfully
INFO:asgi_wsgi_app:Uvicorn: INFO:pycommerce.core.db:Initializing database with URL: postgresql://neondb_owner:npg_BreoUG7ukwD2@ep-red-hall-a51hczs5.us-east-2.aws.neon.tech/neondb?sslmode=require
INFO:asgi_wsgi_app:Uvicorn: INFO:pycommerce.core.db:Database tables created successfully
INFO:asgi_wsgi_app:Uvicorn: INFO:pycommerce.migrations:Database migrations initialized
INFO:asgi_wsgi_app:Uvicorn: INFO:pycommerce.models.category:CategoryManager initialized
INFO:asgi_wsgi_app:Uvicorn: INFO:pycommerce.services.market_analysis:Flask ProductManager initialized for fallback product lookups
INFO:asgi_wsgi_app:Uvicorn: INFO:pycommerce.services.market_analysis:Market analysis service initialized
INFO:asgi_wsgi_app:Waiting for uvicorn server (attempt 9/10)
INFO:asgi_wsgi_app:Uvicorn: INFO:routes.admin.categories:Initializing managers for categories routes
INFO:asgi_wsgi_app:Uvicorn: INFO:pycommerce.models.category:CategoryManager initialized
INFO:asgi_wsgi_app:Uvicorn: INFO:routes.admin.categories:Successfully initialized CategoryManager for admin categories routes
INFO:asgi_wsgi_app:Uvicorn: INFO:routes.admin.categories:Manager initialization complete
INFO:asgi_wsgi_app:Uvicorn: INFO:routes.storefront.home:Home routes registered successfully
INFO:asgi_wsgi_app:Uvicorn: INFO:routes.storefront.stores:Initialized SDK TenantManager
INFO:asgi_wsgi_app:Uvicorn: INFO:routes.storefront.stores:Initialized SDK ProductManager
INFO:asgi_wsgi_app:Uvicorn: INFO:routes.storefront.stores:Initialized SDK CartManager
INFO:asgi_wsgi_app:Uvicorn: INFO:routes.storefront.stores:Finished loading managers
INFO:asgi_wsgi_app:Uvicorn: INFO:routes.storefront.cart:Initialized SDK ProductManager
INFO:asgi_wsgi_app:Uvicorn: INFO:routes.storefront.cart:Initialized SDK CartManager
INFO:asgi_wsgi_app:Uvicorn: INFO:routes.storefront.cart:Initialized SDK TenantManager
INFO:asgi_wsgi_app:Uvicorn: INFO:routes.storefront.cart:Finished loading managers
INFO:asgi_wsgi_app:Uvicorn: INFO:routes.storefront.checkout:Initialized SDK TenantManager
INFO:asgi_wsgi_app:Uvicorn: INFO:routes.storefront.checkout:Initialized SDK ProductManager
INFO:asgi_wsgi_app:Uvicorn: INFO:routes.storefront.checkout:Initialized SDK CartManager
INFO:asgi_wsgi_app:Uvicorn: INFO:routes.storefront.checkout:Initialized SDK OrderManager
INFO:asgi_wsgi_app:Uvicorn: INFO:routes.storefront.checkout:Finished loading Flask app managers
INFO:asgi_wsgi_app:Uvicorn: INFO:routes.admin.page_builder:Setting up page builder routes with templates
INFO:asgi_wsgi_app:Uvicorn: INFO:routes.admin.page_builder:Templates setup complete
INFO:asgi_wsgi_app:Uvicorn: INFO:routes.admin.page_builder:Base directory: /home/runner/workspace
INFO:asgi_wsgi_app:Uvicorn: INFO:routes.admin.page_builder:Template directory: /home/runner/workspace/templates
INFO:asgi_wsgi_app:Uvicorn: INFO:routes.admin.page_builder:Template found: /home/runner/workspace/templates/admin/pages/list.html
INFO:asgi_wsgi_app:Uvicorn: INFO:routes.admin.page_builder:Template found: /home/runner/workspace/templates/admin/pages/create.html
INFO:asgi_wsgi_app:Uvicorn: INFO:routes.admin.page_builder:Template found: /home/runner/workspace/templates/admin/pages/editor.html
INFO:asgi_wsgi_app:Uvicorn: INFO:web_app:Page Builder routes initialized successfully with templates
INFO:asgi_wsgi_app:Uvicorn: INFO:web_app:Admin routes registered successfully
INFO:asgi_wsgi_app:Uvicorn: INFO:routes.storefront.home:Home routes registered successfully
INFO:asgi_wsgi_app:Uvicorn: INFO:routes.storefront.cart:Initialized SDK ProductManager
INFO:asgi_wsgi_app:Uvicorn: INFO:routes.storefront.cart:Initialized SDK CartManager
INFO:asgi_wsgi_app:Uvicorn: INFO:routes.storefront.cart:Initialized SDK TenantManager
INFO:asgi_wsgi_app:Uvicorn: INFO:routes.storefront.cart:Finished loading managers
INFO:asgi_wsgi_app:Uvicorn: INFO:routes.storefront.checkout:Initialized SDK TenantManager
INFO:asgi_wsgi_app:Uvicorn: INFO:routes.storefront.checkout:Initialized SDK ProductManager
INFO:asgi_wsgi_app:Uvicorn: INFO:routes.storefront.checkout:Initialized SDK CartManager
INFO:asgi_wsgi_app:Uvicorn: INFO:routes.storefront.checkout:Finished loading Flask app managers
INFO:asgi_wsgi_app:Uvicorn: INFO:routes.storefront.stores:Initialized SDK TenantManager
INFO:asgi_wsgi_app:Uvicorn: INFO:routes.storefront.stores:Initialized SDK ProductManager
INFO:asgi_wsgi_app:Uvicorn: INFO:routes.storefront.stores:Initialized SDK CartManager
INFO:asgi_wsgi_app:Uvicorn: INFO:routes.storefront.stores:Finished loading managers
INFO:asgi_wsgi_app:Uvicorn: INFO:web_app:Storefront routes registered successfully
INFO:asgi_wsgi_app:Uvicorn: INFO:web_app:Store settings test routes registered successfully
INFO:asgi_wsgi_app:Uvicorn: INFO:pycommerce.models.category:CategoryManager initialized
INFO:asgi_wsgi_app:Uvicorn: INFO:pycommerce.services.market_analysis:Flask ProductManager initialized for fallback product lookups
INFO:asgi_wsgi_app:Uvicorn: INFO:pycommerce.services.market_analysis:Market analysis service initialized
INFO:asgi_wsgi_app:Uvicorn: INFO:web_app:API routes registered successfully
INFO:asgi_wsgi_app:Uvicorn: INFO:     Started server process [4439]
INFO:asgi_wsgi_app:Uvicorn: INFO:     Waiting for application startup.
INFO:asgi_wsgi_app:Uvicorn: INFO:     Application startup complete.
INFO:asgi_wsgi_app:Uvicorn: INFO:     127.0.0.1:57080 - "GET /api/health HTTP/1.1" 200 OK
INFO:httpx:HTTP Request: GET http://127.0.0.1:8000/api/health "HTTP/1.1 200 OK"
INFO:asgi_wsgi_app:Uvicorn server is running
INFO:routes.storefront.home:Home routes registered successfully
INFO:routes.storefront.cart:Initialized SDK ProductManager
INFO:routes.storefront.cart:Initialized SDK CartManager
INFO:routes.storefront.cart:Initialized SDK TenantManager
INFO:routes.storefront.cart:Finished loading managers
INFO:routes.storefront.checkout:Initialized SDK TenantManager
INFO:routes.storefront.checkout:Initialized SDK ProductManager
INFO:routes.storefront.checkout:Initialized SDK CartManager
INFO:routes.storefront.checkout:Finished loading Flask app managers
INFO:routes.admin.page_builder:Setting up page builder routes with templates
INFO:routes.admin.page_builder:Templates setup complete
INFO:routes.admin.page_builder:Base directory: /home/runner/workspace
INFO:routes.admin.page_builder:Template directory: /home/runner/workspace/templates
INFO:routes.admin.page_builder:Template found: /home/runner/workspace/templates/admin/pages/list.html
INFO:routes.admin.page_builder:Template found: /home/runner/workspace/templates/admin/pages/create.html
INFO:routes.admin.page_builder:Template found: /home/runner/workspace/templates/admin/pages/editor.html
INFO:root:Starting application with all routes registered
INFO:__main__:All page builder tables already exist
INFO:__main__:All page builder tables exist and are ready to use
INFO:__main__:Creating default page templates...
ERROR:pycommerce.models.page_builder:Error listing templates: One or more mappers failed to initialize - can't proceed with initialization of other mappers. Triggering mapper: 'Mapper[InventoryRecord(inventory_records)]'. Original exception was: When initializing mapper Mapper[InventoryRecord(inventory_records)], expression 'pycommerce.models.db_inventory.InventoryTransaction' failed to locate a name ("Module 'models' has no mapped classes registered under the name 'db_inventory'"). If this is a class name, consider adding this relationship() to the <class 'pycommerce.models.db_registry.InventoryRecord'> class after both dependent classes have been defined.
ERROR:pycommerce.models.page_builder:Error creating template: One or more mappers failed to initialize - can't proceed with initialization of other mappers. Triggering mapper: 'Mapper[InventoryRecord(inventory_records)]'. Original exception was: When initializing mapper Mapper[InventoryRecord(inventory_records)], expression 'pycommerce.models.db_inventory.InventoryTransaction' failed to locate a name ("Module 'models' has no mapped classes registered under the name 'db_inventory'"). If this is a class name, consider adding this relationship() to the <class 'pycommerce.models.db_registry.InventoryRecord'> class after both dependent classes have been defined.
ERROR:create_default_templates:Error creating default templates: One or more mappers failed to initialize - can't proceed with initialization of other mappers. Triggering mapper: 'Mapper[InventoryRecord(inventory_records)]'. Original exception was: When initializing mapper Mapper[InventoryRecord(inventory_records)], expression 'pycommerce.models.db_inventory.InventoryTransaction' failed to locate a name ("Module 'models' has no mapped classes registered under the name 'db_inventory'"). If this is a class name, consider adding this relationship() to the <class 'pycommerce.models.db_registry.InventoryRecord'> class after both dependent classes have been defined.
INFO:__main__:Starting server on port 8001
INFO:     Will watch for changes in these directories: ['/home/runner/workspace']
INFO:     Uvicorn running on http://0.0.0.0:8001 (Press CTRL+C to quit)
INFO:     Started reloader process [4367] using WatchFiles
INFO:pycommerce.core.db:Creating database engine with URL: postgresql://neondb_owner:npg_BreoUG7ukwD2@ep-red-hall-a51hczs5.us-east-2.aws.neon.tech/neondb?sslmode=require
INFO:pycommerce.core.db:Database engine created successfully
INFO:pycommerce.services.mail:Email template directory: /home/runner/workspace/templates/emails
ERROR:pycommerce.plugins.payment.config:Error querying database for settings: When initializing mapper Mapper[InventoryRecord(inventory_records)], expression 'pycommerce.models.db_inventory.InventoryTransaction' failed to locate a name ("Module 'models' has no mapped classes registered under the name 'db_inventory'"). If this is a class name, consider adding this relationship() to the <class 'pycommerce.models.db_registry.InventoryRecord'> class after both dependent classes have been defined.
INFO:pycommerce.plugins.payment.config:Using development Stripe credentials
INFO:pycommerce.plugins.payment.config:Using development PayPal credentials
INFO:pycommerce.plugins.payment.stripe:Initializing Stripe payment plugin
INFO:pycommerce.plugins:Registering plugin: stripe_payment v0.1.0
INFO:pycommerce.plugins.payment.stripe:Initializing Stripe payment plugin
INFO:pycommerce:Registered payment plugin: stripe
INFO:pycommerce.plugins.payment.paypal:Initializing PayPal payment plugin
INFO:pycommerce.plugins:Registering plugin: paypal_payment v0.1.0
INFO:pycommerce.plugins.payment.paypal:Initializing PayPal payment plugin
INFO:pycommerce:Registered payment plugin: paypal
INFO:pycommerce.plugins:Registering plugin: standard_shipping v0.1.0
INFO:pycommerce.plugins.shipping.standard:Initializing Standard shipping plugin
INFO:pycommerce:Registered shipping plugin: standard
INFO:watchfiles.main:32 changes detected
INFO:pycommerce.models.category:Found Flask app in module app
INFO:pycommerce.models.category:CategoryManager initialized
ERROR:pycommerce.models.plugin_config:Error retrieving configuration for plugin ai: One or more mappers failed to initialize - can't proceed with initialization of other mappers. Triggering mapper: 'Mapper[InventoryRecord(inventory_records)]'. Original exception was: When initializing mapper Mapper[InventoryRecord(inventory_records)], expression 'pycommerce.models.db_inventory.InventoryTransaction' failed to locate a name ("Module 'models' has no mapped classes registered under the name 'db_inventory'"). If this is a class name, consider adding this relationship() to the <class 'pycommerce.models.db_registry.InventoryRecord'> class after both dependent classes have been defined.
ERROR:pycommerce.plugins.ai.config:Error loading AI configuration: Failed to retrieve plugin configuration: One or more mappers failed to initialize - can't proceed with initialization of other mappers. Triggering mapper: 'Mapper[InventoryRecord(inventory_records)]'. Original exception was: When initializing mapper Mapper[InventoryRecord(inventory_records)], expression 'pycommerce.models.db_inventory.InventoryTransaction' failed to locate a name ("Module 'models' has no mapped classes registered under the name 'db_inventory'"). If this is a class name, consider adding this relationship() to the <class 'pycommerce.models.db_registry.InventoryRecord'> class after both dependent classes have been defined.
WARNING:root:AI configuration module not available
INFO:watchfiles.main:2 changes detected
INFO:pycommerce.core.db:Initializing database with URL: postgresql://neondb_owner:npg_BreoUG7ukwD2@ep-red-hall-a51hczs5.us-east-2.aws.neon.tech/neondb?sslmode=require
INFO:pycommerce.core.db:Database tables created successfully
INFO:pycommerce.core.db:Initializing database with URL: postgresql://neondb_owner:npg_BreoUG7ukwD2@ep-red-hall-a51hczs5.us-east-2.aws.neon.tech/neondb?sslmode=require
INFO:pycommerce.core.db:Database tables created successfully
INFO:pycommerce.migrations:Database migrations initialized
INFO:pycommerce.models.category:CategoryManager initialized
INFO:pycommerce.services.market_analysis:Flask ProductManager initialized for fallback product lookups
INFO:pycommerce.services.market_analysis:Market analysis service initialized
INFO:routes.admin.categories:Initializing managers for categories routes
INFO:pycommerce.models.category:CategoryManager initialized
INFO:routes.admin.categories:Successfully initialized CategoryManager for admin categories routes
INFO:routes.admin.categories:Manager initialization complete
INFO:routes.storefront.home:Home routes registered successfully
INFO:routes.storefront.stores:Initialized SDK TenantManager
INFO:routes.storefront.stores:Initialized SDK ProductManager
INFO:routes.storefront.stores:Initialized SDK CartManager
INFO:routes.storefront.stores:Finished loading managers
INFO:routes.storefront.cart:Initialized SDK ProductManager
INFO:routes.storefront.cart:Initialized SDK CartManager
INFO:routes.storefront.cart:Initialized SDK TenantManager
INFO:routes.storefront.cart:Finished loading managers
INFO:routes.storefront.checkout:Initialized SDK TenantManager
INFO:routes.storefront.checkout:Initialized SDK ProductManager
INFO:routes.storefront.checkout:Initialized SDK CartManager
INFO:routes.storefront.checkout:Initialized SDK OrderManager
INFO:routes.storefront.checkout:Finished loading Flask app managers
INFO:routes.admin.page_builder:Setting up page builder routes with templates
INFO:routes.admin.page_builder:Templates setup complete
INFO:routes.admin.page_builder:Base directory: /home/runner/workspace
INFO:routes.admin.page_builder:Template directory: /home/runner/workspace/templates
INFO:routes.admin.page_builder:Template found: /home/runner/workspace/templates/admin/pages/list.html
INFO:routes.admin.page_builder:Template found: /home/runner/workspace/templates/admin/pages/create.html
INFO:routes.admin.page_builder:Template found: /home/runner/workspace/templates/admin/pages/editor.html
INFO:web_app:Page Builder routes initialized successfully with templates
INFO:web_app:Admin routes registered successfully
INFO:routes.storefront.home:Home routes registered successfully
INFO:routes.storefront.cart:Initialized SDK ProductManager
INFO:routes.storefront.cart:Initialized SDK CartManager
INFO:routes.storefront.cart:Initialized SDK TenantManager
INFO:routes.storefront.cart:Finished loading managers
INFO:routes.storefront.checkout:Initialized SDK TenantManager
INFO:routes.storefront.checkout:Initialized SDK ProductManager
INFO:routes.storefront.checkout:Initialized SDK CartManager
INFO:routes.storefront.checkout:Finished loading Flask app managers
INFO:routes.storefront.stores:Initialized SDK TenantManager
INFO:routes.storefront.stores:Initialized SDK ProductManager
INFO:routes.storefront.stores:Initialized SDK CartManager
INFO:routes.storefront.stores:Finished loading managers
INFO:web_app:Storefront routes registered successfully
INFO:web_app:Store settings test routes registered successfully
INFO:pycommerce.models.category:CategoryManager initialized
INFO:pycommerce.services.market_analysis:Flask ProductManager initialized for fallback product lookups
INFO:pycommerce.services.market_analysis:Market analysis service initialized
INFO:web_app:API routes registered successfully
INFO:asgi_wsgi_app:Uvicorn: INFO:     127.0.0.1:41792 - "GET /api/health HTTP/1.1" 200 OK
INFO:httpx:HTTP Request: GET http://127.0.0.1:8000/api/health "HTTP/1.1 200 OK"
INFO:asgi_wsgi_app:Uvicorn server is already running and responsive
INFO:__mp_main__:Creating default page templates...
ERROR:pycommerce.models.page_builder:Error listing templates: One or more mappers failed to initialize - can't proceed with initialization of other mappers. Triggering mapper: 'Mapper[InventoryRecord(inventory_records)]'. Original exception was: When initializing mapper Mapper[InventoryRecord(inventory_records)], expression 'pycommerce.models.db_inventory.InventoryTransaction' failed to locate a name ("Module 'models' has no mapped classes registered under the name 'db_inventory'"). If this is a class name, consider adding this relationship() to the <class 'pycommerce.models.db_registry.InventoryRecord'> class after both dependent classes have been defined.
ERROR:pycommerce.models.page_builder:Error creating template: One or more mappers failed to initialize - can't proceed with initialization of other mappers. Triggering mapper: 'Mapper[InventoryRecord(inventory_records)]'. Original exception was: When initializing mapper Mapper[InventoryRecord(inventory_records)], expression 'pycommerce.models.db_inventory.InventoryTransaction' failed to locate a name ("Module 'models' has no mapped classes registered under the name 'db_inventory'"). If this is a class name, consider adding this relationship() to the <class 'pycommerce.models.db_registry.InventoryRecord'> class after both dependent classes have been defined.
ERROR:create_default_templates:Error creating default templates: One or more mappers failed to initialize - can't proceed with initialization of other mappers. Triggering mapper: 'Mapper[InventoryRecord(inventory_records)]'. Original exception was: When initializing mapper Mapper[InventoryRecord(inventory_records)], expression 'pycommerce.models.db_inventory.InventoryTransaction' failed to locate a name ("Module 'models' has no mapped classes registered under the name 'db_inventory'"). If this is a class name, consider adding this relationship() to the <class 'pycommerce.models.db_registry.InventoryRecord'> class after both dependent classes have been defined.
INFO:__mp_main__:Starting server on port 8002
INFO:     Started server process [4506]
INFO:     Waiting for application startup.
INFO:     Application startup complete.