INFO:pycommerce.services.mail:Email template directory: /home/runner/workspace/templates/emails
INFO:pycommerce.plugins.payment.config:Successfully loaded payment settings from database
INFO:pycommerce.plugins.payment.config:Using development Stripe credentials
INFO:pycommerce.plugins.payment.config:Using development PayPal credentials
INFO:pycommerce.plugins.payment.stripe:Initializing Stripe payment plugin
INFO:pycommerce.plugins:Registering plugin: stripe_payment v0.1.0
INFO:pycommerce.plugins.payment.stripe:Initializing Stripe payment plugin
INFO:pycommerce:Registered payment plugin: stripe
INFO:pycommerce.plugins.payment.paypal:Initializing PayPal payment plugin
INFO:pycommerce.plugins:Registering plugin: paypal_payment v0.1.0
INFO:pycommerce.plugins.payment.paypal:Initializing PayPal payment plugin
INFO:pycommerce:Registered payment plugin: paypal
INFO:pycommerce.plugins:Registering plugin: standard_shipping v0.1.0
INFO:pycommerce.plugins.shipping.standard:Initializing Standard shipping plugin
INFO:pycommerce:Registered shipping plugin: standard
INFO:pycommerce.plugins:Registering plugin: ai_content v0.1.0
INFO:pycommerce.plugins.ai:Initialized AI content plugin
INFO:pycommerce:Registered AI plugin
INFO:pycommerce.models.category:Found Flask app in module app
INFO:pycommerce.models.category:CategoryManager initialized
WARNING:root:AI configuration module not available
INFO:pycommerce.migrations:Database migrations initialized
INFO:pycommerce.models.category:CategoryManager initialized
INFO:pycommerce.services.market_analysis:Flask ProductManager initialized for fallback product lookups
INFO:pycommerce.services.market_analysis:Market analysis service initialized
INFO:routes.admin.categories:Initializing managers for categories routes
INFO:pycommerce.models.category:CategoryManager initialized
INFO:routes.admin.categories:Successfully initialized CategoryManager for admin categories routes
INFO:routes.admin.categories:Manager initialization complete
INFO:routes.storefront.home:Home routes registered successfully
INFO:routes.storefront.stores:Initialized SDK TenantManager
INFO:routes.storefront.stores:Initialized SDK ProductManager
INFO:routes.storefront.stores:Initialized SDK CartManager
INFO:routes.storefront.stores:Finished loading managers
INFO:routes.storefront.cart:Initialized SDK ProductManager
INFO:routes.storefront.cart:Initialized SDK CartManager
INFO:routes.storefront.cart:Initialized SDK TenantManager
INFO:routes.storefront.cart:Finished loading managers
INFO:routes.storefront.checkout:Initialized SDK TenantManager
INFO:routes.storefront.checkout:Initialized SDK ProductManager
INFO:routes.storefront.checkout:Initialized SDK CartManager
INFO:routes.storefront.checkout:Initialized SDK OrderManager
INFO:routes.storefront.checkout:Finished loading Flask app managers
/home/runner/workspace/pycommerce/models/page_builder.py:110: SAWarning: User-placed attribute InventoryRecord.transactions on Mapper[InventoryRecord(inventory_records)] is replacing an existing class-bound attribute of the same name.  Behavior is not fully defined in this case.  This use is deprecated and will raise an error in a future release (This warning originated from the `configure_mappers()` process, which was invoked automatically in response to a user-initiated operation.)
  Tenant.pages = relationship("Page", back_populates="tenant", cascade="all, delete-orphan")
INFO:routes.admin.page_builder:Setting up page builder routes with templates
INFO:routes.admin.page_builder:Templates setup complete
INFO:routes.admin.page_builder:Base directory: /home/runner/workspace
INFO:routes.admin.page_builder:Template directory: /home/runner/workspace/templates
INFO:routes.admin.page_builder:Template found: /home/runner/workspace/templates/admin/pages/list.html
INFO:routes.admin.page_builder:Template found: /home/runner/workspace/templates/admin/pages/create.html
INFO:routes.admin.page_builder:Template found: /home/runner/workspace/templates/admin/pages/editor.html
INFO:web_app:Page Builder routes initialized successfully with templates
INFO:web_app:Admin routes registered successfully
INFO:routes.storefront.home:Home routes registered successfully
INFO:routes.storefront.cart:Initialized SDK ProductManager
INFO:routes.storefront.cart:Initialized SDK CartManager
INFO:routes.storefront.cart:Initialized SDK TenantManager
INFO:routes.storefront.cart:Finished loading managers
INFO:routes.storefront.checkout:Initialized SDK TenantManager
INFO:routes.storefront.checkout:Initialized SDK ProductManager
INFO:routes.storefront.checkout:Initialized SDK CartManager
INFO:routes.storefront.checkout:Finished loading Flask app managers
INFO:routes.storefront.stores:Initialized SDK TenantManager
INFO:routes.storefront.stores:Initialized SDK ProductManager
INFO:routes.storefront.stores:Initialized SDK CartManager
INFO:routes.storefront.stores:Finished loading managers
INFO:web_app:Storefront routes registered successfully
INFO:web_app:Store settings test routes registered successfully
INFO:pycommerce.models.category:CategoryManager initialized
INFO:pycommerce.services.market_analysis:Flask ProductManager initialized for fallback product lookups
INFO:pycommerce.services.market_analysis:Market analysis service initialized
/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/pydantic/_internal/_config.py:373: UserWarning: Valid config keys have changed in V2:
* 'orm_mode' has been renamed to 'from_attributes'
  warnings.warn(message, UserWarning)
Traceback (most recent call last):
  File "/home/runner/workspace/main.py", line 12, in <module>
    from asgi_wsgi_app import proxy_to_uvicorn, start_uvicorn_server
  File "/home/runner/workspace/asgi_wsgi_app.py", line 8, in <module>
    from web_app import app as asgi_app
  File "/home/runner/workspace/web_app.py", line 173, in <module>
    from pycommerce.api.routes import register_api_routes
  File "/home/runner/workspace/pycommerce/api/__init__.py", line 7, in <module>
    from pycommerce.api.routes import users, products, cart, checkout
  File "/home/runner/workspace/pycommerce/api/routes/checkout.py", line 416, in <module>
    @router.post("/orders/{order_id}/payment", response_model=Order)
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/fastapi/routing.py", line 994, in decorator
    self.add_api_route(
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/fastapi/routing.py", line 933, in add_api_route
    route = route_class(
            ^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/fastapi/routing.py", line 511, in __init__
    self.response_field = create_model_field(
                          ^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/fastapi/utils.py", line 98, in create_model_field
    raise fastapi.exceptions.FastAPIError(
fastapi.exceptions.FastAPIError: Invalid args for response field! Hint: check that <class 'pycommerce.models.order.Order'> is a valid Pydantic field type. If you are using a return type annotation that is not a valid Pydantic field (e.g. Union[Response, dict, None]) you can disable generating the response model from the type annotation with the path operation decorator parameter response_model=None. Read more: https://fastapi.tiangolo.com/tutorial/response-model/