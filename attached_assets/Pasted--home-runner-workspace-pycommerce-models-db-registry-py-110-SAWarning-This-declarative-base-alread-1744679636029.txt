/home/runner/workspace/pycommerce/models/db_registry.py:110: SAWarning: This declarative base already contains a class with the same class name and module name as pycommerce.models.db_registry.InventoryRecord, and will be replaced in the string-lookup table.
  class InventoryRecord(Base):
INFO:pycommerce.services.mail:Email template directory: /home/runner/workspace/templates/emails
ERROR:pycommerce.plugins.payment.config:Error querying database for settings: When initializing mapper Mapper[InventoryRecord(inventory_records)], expression 'pycommerce.models.db_inventory.InventoryTransaction' failed to locate a name ("Module 'models' has no mapped classes registered under the name 'db_inventory'"). If this is a class name, consider adding this relationship() to the <class 'pycommerce.models.db_registry.InventoryRecord'> class after both dependent classes have been defined.
INFO:pycommerce.plugins.payment.config:Using development Stripe credentials
INFO:pycommerce.plugins.payment.config:Using development PayPal credentials
INFO:pycommerce.plugins.payment.stripe:Initializing Stripe payment plugin
INFO:pycommerce.plugins:Registering plugin: stripe_payment v0.1.0
INFO:pycommerce.plugins.payment.stripe:Initializing Stripe payment plugin
INFO:pycommerce:Registered payment plugin: stripe
INFO:pycommerce.plugins.payment.paypal:Initializing PayPal payment plugin
INFO:pycommerce.plugins:Registering plugin: paypal_payment v0.1.0
INFO:pycommerce.plugins.payment.paypal:Initializing PayPal payment plugin
INFO:pycommerce:Registered payment plugin: paypal
INFO:pycommerce.plugins:Registering plugin: standard_shipping v0.1.0
INFO:pycommerce.plugins.shipping.standard:Initializing Standard shipping plugin
INFO:pycommerce:Registered shipping plugin: standard
INFO:pycommerce.models.category:Found Flask app in module app
INFO:pycommerce.models.category:CategoryManager initialized
ERROR:pycommerce.models.plugin_config:Error retrieving configuration for plugin ai: One or more mappers failed to initialize - can't proceed with initialization of other mappers. Triggering mapper: 'Mapper[InventoryRecord(inventory_records)]'. Original exception was: When initializing mapper Mapper[InventoryRecord(inventory_records)], expression 'pycommerce.models.db_inventory.InventoryTransaction' failed to locate a name ("Module 'models' has no mapped classes registered under the name 'db_inventory'"). If this is a class name, consider adding this relationship() to the <class 'pycommerce.models.db_registry.InventoryRecord'> class after both dependent classes have been defined.
ERROR:pycommerce.plugins.ai.config:Error loading AI configuration: Failed to retrieve plugin configuration: One or more mappers failed to initialize - can't proceed with initialization of other mappers. Triggering mapper: 'Mapper[InventoryRecord(inventory_records)]'. Original exception was: When initializing mapper Mapper[InventoryRecord(inventory_records)], expression 'pycommerce.models.db_inventory.InventoryTransaction' failed to locate a name ("Module 'models' has no mapped classes registered under the name 'db_inventory'"). If this is a class name, consider adding this relationship() to the <class 'pycommerce.models.db_registry.InventoryRecord'> class after both dependent classes have been defined.
WARNING:root:AI configuration module not available
INFO:pycommerce.core.db:Initializing database...
INFO:pycommerce.core.db:Database initialized successfully.
INFO:pycommerce.core.db:Initializing database...
INFO:pycommerce.core.db:Database initialized successfully.
INFO:pycommerce.migrations:Database migrations initialized
INFO:pycommerce.models.category:CategoryManager initialized
INFO:pycommerce.services.market_analysis:Flask ProductManager initialized for fallback product lookups
INFO:pycommerce.services.market_analysis:Market analysis service initialized
INFO:routes.admin.categories:Initializing managers for categories routes
INFO:pycommerce.models.category:CategoryManager initialized
INFO:routes.admin.categories:Successfully initialized CategoryManager for admin categories routes
INFO:routes.admin.categories:Manager initialization complete
INFO:routes.storefront.home:Home routes registered successfully
INFO:routes.storefront.stores:Initialized SDK TenantManager
INFO:routes.storefront.stores:Initialized SDK ProductManager
INFO:routes.storefront.stores:Initialized SDK CartManager
INFO:routes.storefront.stores:Finished loading managers
INFO:routes.storefront.cart:Initialized SDK ProductManager
INFO:routes.storefront.cart:Initialized SDK CartManager
INFO:routes.storefront.cart:Initialized SDK TenantManager
INFO:routes.storefront.cart:Finished loading managers
INFO:routes.storefront.checkout:Initialized SDK TenantManager
INFO:routes.storefront.checkout:Initialized SDK ProductManager
INFO:routes.storefront.checkout:Initialized SDK CartManager
INFO:routes.storefront.checkout:Initialized SDK OrderManager
INFO:routes.storefront.checkout:Finished loading Flask app managers
Traceback (most recent call last):
  File "/home/runner/workspace/main.py", line 12, in <module>
    from asgi_wsgi_app import proxy_to_uvicorn, start_uvicorn_server
  File "/home/runner/workspace/asgi_wsgi_app.py", line 8, in <module>
    from web_app import app as asgi_app
  File "/home/runner/workspace/web_app.py", line 46, in <module>
    from routes.admin.page_builder import setup_routes as setup_page_builder_routes
  File "/home/runner/workspace/routes/admin/page_builder.py", line 14, in <module>
    from pycommerce.models.page_builder import PageManager, PageSectionManager, ContentBlockManager, PageTemplateManager, Page, PageTemplate
  File "/home/runner/workspace/pycommerce/models/page_builder.py", line 112
    from pycommerce.models.db_tenant import Tenant
    ^
IndentationError: expected an indented block after 'if' statement on line 109